pipeline {
    agent any
    environment {
        AWS_REGION = 'us-east-1'
    }
    stages {
        stage('Clone Code') {
            steps {
                git branch: 'main', url: 'https://github.com/bhargavibairagoni/python-flask-app.git'
            }
        }
        stage('Create EKS Cluster') {
            steps {
                script {
                    withCredentials([aws(credentialsId: 'aws_credentials', accessKeyVariable: 'AWS_ACCESS_KEY', secretKeyVariable: 'AWS_SECRET_KEY')]) {
                        sh '''
                        aws configure set aws_access_key_id $AWS_ACCESS_KEY
                        aws configure set aws_secret_access_key $AWS_SECRET_KEY
                        aws configure set region $AWS_REGION
                        if ! eksctl get cluster --name eks-cluster --region $AWS_REGION; then
                            eksctl create cluster --name eks-cluster --region $AWS_REGION --fargate
                        else
                            echo "Cluster already exists."
                        fi
                        '''
                    }
                }
            }
        }
        stage('Build & Deploy to EKS') {
            steps {
                script {
                    sh '''
                    aws eks update-kubeconfig --name eks-cluster --region $AWS_REGION
                    eksctl create fatgateprofile \
                    --cluster eks-cluster \
                    --region us-east-1 \
                    --name alb-sample-app \
                    --namespace flask-app
                    kubectl apply -f https://github.com/bhargavibairagoni/python-flask-app.git/kubernetes/Deployment.yml
                    ingress controller --> ingress-app --> Load balancer --> target group, port
                    ALB controller
                    eksctl utils associate-iam-oidc-provider --cluster eks-cluster --approve
                    ALB controller --> Pod --> Access to AWS service such as ALB
                    curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/install/iam_policy.json
                    aws iam create-policy \
                        --policy-name AWSLoadBalancerControllerIAMPolicy \
                        --policy-document file://iam_policy.json
                    eksctl create iamserviceaccount \
                        --cluster=eks-cluster \
                        --namespace=kube-system \
                        --name=aws-load-balancer-controller \
                        --role-name AmazonEKSLoadBalancerControllerRole \
                        --attach-policy-arn=arn:aws:iam::905418365089:policy/AWSLoadBalancerControllerIAMPolicy \
                        --approve
                    helm repo add eks https://aws.github.io/eks-charts
                    //kubectl apply -f service.yml
                    '''
                }
            }
        }
    }
}
