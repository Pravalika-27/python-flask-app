pipeline {
    agent any
    environment {
        AWS_REGION = 'us-east-1'
        ECS_CLUSTER = 'flask-cluster'
        ECS_SERVICE = 'flask-service'
        DOCKER_IMAGE = '905418365089.dkr.ecr.us-east-1.amazonaws.com/flask-app:app'
    }
    stages {
        stage('Code ') {
            steps {
                git branch: 'main', url: 'https://github.com/bhargavibairagoni/python-flask-app.git'
            }
        }
        stage('build') {
            steps{
                sh '''docker build -t flask-app ./Docker
                docker run -itd --name cont1 -p 5000:5000 flask-app'''
            }
        }
        Stage("push to ecr") {
            steps {
                withCredentials([aws(credentialsId: 'aws_credentials', accessKeyVariable: 'AWS_ACCESS_KEY', secretKeyVariable: 'AWS_SECRET_KEY')]) {
                sh ''' 
                aws configure set aws_access_key_id $AWS_ACCESS_KEY
                aws configure set aws_secret_access_key $AWS_SECRET_KEY
                aws configure set region $AWS_REGION
                aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 905418365089.dkr.ecr.us-east-1.amazonaws.com
                sudo docker tag flask 905418365089.dkr.ecr.us-east-1.amazonaws.com/flask-app:app
                sudo docker push 905418365089.dkr.ecr.us-east-1.amazonaws.com/flask-app:app'''
            }
        }
        
        stage('Deploy to ECS') {
            steps {
                script {
                    withCredentials([aws(credentialsId: 'aws_credentials', accessKeyVariable: 'AWS_ACCESS_KEY', secretKeyVariable: 'AWS_SECRET_KEY')]) {
                        sh '''
                        aws configure set aws_access_key_id $AWS_ACCESS_KEY
                        aws configure set aws_secret_access_key $AWS_SECRET_KEY
                        aws configure set region $AWS_REGION

                        aws ecs register-task-definition \
                            --family flask-app \
                            --network-mode bridge \
                            --container-definitions '[{
                                "name": "flask-app",
                                "image": "'"$DOCKER_IMAGE"'",
                                "memory": 512,
                                "cpu": 256,
                                "essential": true,
                                "portMappings": [{"containerPort": 5000, "hostPort": 5000}]
                            }]'

                        aws ecs update-service \
                            --cluster $ECS_CLUSTER \
                            --service $ECS_SERVICE \
                            --force-new-deployment
                        '''
                    }
                }
            }
        }
    }
}
