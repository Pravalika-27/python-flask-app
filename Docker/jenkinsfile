pipeline {
    agent any
    environment {
        AWS_REGION = 'us-east-1'
        ECR_URL = '905418365089.dkr.ecr.us-east-1.amazonaws.com/flask-app'
    }
    stages {
        stage('Code') {
            steps {
                git branch: 'main', url: 'https://github.com/bhargavibairagoni/python-flask-app.git'
            }
        }
        stage('Test') {
            steps {
                sh 'pytest || true'
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t flask-app ./Docker'
            }
        }
        stage('Push to ECR') {
            steps {
                withAWS(credentials: 'aws_credentials', region: 'us-east-1') {
                    sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_URL'
                    sh 'docker tag flask-app:latest 905418365089.dkr.ecr.us-east-1.amazonaws.com/flask-app'
                    sh 'docker push 905418365089.dkr.ecr.us-east-1.amazonaws.com/flask-app'
                }
            }
        }
        stage('Deploy to ECS') {
            steps {
                withAWS(credentials: 'aws_credentials', region: 'us-east-1') {
                    sh 'aws ecs update-service --cluster flask-cluster --service flask-app-service --force-new-deployment'
                }
            }
        }
    }
}

