pipeline {
    agent any
    environment {
        AWS_REGION = 'us-east-1'
        ECS_CLUSTER = 'flask-cluster'
        ECS_SERVICE = 'flask-service'
        REPO_URL = 'https://github.com/Pravalika-27/python-flask-app.git'
        IMAGE_NAME = 'flask-app'
        ECR_URL = '058264135441.dkr.ecr.us-east-1.amazonaws.com/flask-app'
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: "${REPO_URL}"
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh '''
                    docker build -t ${IMAGE_NAME}:latest .
                    '''
                }
            }
        }
        stage('Push to ECR') {
            steps {
                withCredentials([aws(credentialsId: 'aws_credentials', accessKeyVariable: 'AWS_ACCESS_KEY', secretKeyVariable: 'AWS_SECRET_KEY')]) {
                    script {
                        sh '''
                        aws configure set aws_access_key_id $AWS_ACCESS_KEY
                        aws configure set aws_secret_access_key $AWS_SECRET_KEY
                        aws configure set region $AWS_REGION

                        aws ecr create-repository --repository-name flask-app || true
                        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URL
                        
                        docker tag ${IMAGE_NAME}:latest $ECR_URL:${BUILD_NUMBER}
                        docker push $ECR_URL:${BUILD_NUMBER}
                        '''
                    }
                }
            }
        }
        stage('Deploy to ECS') {
            steps {
                script {
                    withCredentials([aws(credentialsId: 'aws_credentials', accessKeyVariable: 'AWS_ACCESS_KEY', secretKeyVariable: 'AWS_SECRET_KEY')]) {
                        sh '''
                        aws configure set aws_access_key_id $AWS_ACCESS_KEY
                        aws configure set aws_secret_access_key $AWS_SECRET_KEY
                        aws configure set region $AWS_REGION

                        aws ecs register-task-definition \
                            --family flask-app \
                            --network-mode bridge \
                            --container-definitions '[{
                                "name": "flask-app",
                                "image": "'"$ECR_URL:${BUILD_NUMBER}"'",
                                "memory": 512,
                                "cpu": 256,
                                "essential": true,
                                "portMappings": [{"containerPort": 5000, "hostPort": 5000}]
                            }]'

                        aws ecs update-service \
                            --cluster $ECS_CLUSTER \
                            --service $ECS_SERVICE \
                            --force-new-deployment
                        '''
                    }
                }
            }
        }
    }
}
